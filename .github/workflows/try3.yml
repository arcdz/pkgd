name: Docker - CI

# using SEMVER https://semver.org/
on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io

jobs:
  docker:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the GITHUB_TOKEN for the actions in this job.
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      # Checkout: https://github.com/marketplace?type=actions:
      - name: Checkout
        uses: actions/checkout@v4

      # Setup JAVA JDK: https://github.com/marketplace/actions/setup-java-jdk
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # Alternative: 'zulu'
          java-version: '21'
          cache: 'maven'

      # Docker Metadata action: https://github.com/marketplace/actions/docker-metadata-action
      - name: Extract metadata (tags, labels) for Docker # Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      # Docker Login: https://github.com/marketplace/actions/docker-login
      - name: Login to GitHub Container Registry
      #  if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build the project and create Docker image
      - name: Build Docker image
        run: mvn spring-boot:build-image -DskipTests -Dspring-boot.build-image.imageName=${{ env.REGISTRY }}/${{ github.repository }}:${{ env.DOCKER_METADATA_OUTPUT_VERSION }}

      # Push Docker image to GitHub Container Registry
      - name: Push Docker image
        run: docker push ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.DOCKER_METADATA_OUTPUT_VERSION }}

#      # Build and push
#      - name: Build and push
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          push: ${{ github.event_name != 'pull_request' }}
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}